#################
# glauth.conf

#################
# General configuration.
debug = true
# syslog = true
#
# Enable hot-reload of configuration on changes
# - does NOT work [ldap], [ldaps], [backend] or [api] sections
# watchconfig = true

#################
# yubikeyclientid = "yubi-api-clientid"
# yubikeysecret = "yubi-api-secret"

#################
# Server configuration.
[ldap]
  enabled = true
  listen = "0.0.0.0:3893"

[ldaps]
  enabled = false
  listen = "0.0.0.0:3894"
  cert = "certs/server.crt"
  key = "certs/server.key"

#################
# The backend section controls the data store.
[backend]
  datastore = "database"
  # Database type: sqlite, mysql, postgres
  # If not specified, GLAuth will attempt to auto-detect from the connection string
  databasetype = "sqlite"
  baseDN = "dc=glauth,dc=com"

  # Database connection strings:
  
  # // SQLite //
  # For SQLite, specify a file path:
  database = "gl.db"
  
  # // MySQL //
  # For MySQL, use standard connection string format:
  # databasetype = "mysql"
  # database = "glauth:glauth@tcp(127.0.0.1:3306)/glauth"
  # Creating database:
  #     create database glauth;
  #     grant all on glauth.* to glauth@localhost identified by 'glauth';
  
  # // PostgreSQL //
  # For PostgreSQL, use standard connection string format:
  # databasetype = "postgres"
  # database = "host=127.0.0.1 port=5432 dbname=glauth user=glauth password=glauth sslmode=disable"
  # Creating database:
  #     CREATE DATABASE glauth;
  #     CREATE USER glauth WITH PASSWORD 'glauth';
  #     GRANT ALL PRIVILEGES ON DATABASE glauth to glauth;
  
  ## Configure dn format to use structures like 
  ## "uid=serviceuser,cn=svcaccts,$BASEDN" instead of "cn=serviceuser,ou=svcaccts,$BASEDN"
  ## to help ease migrations from other LDAP systems
  nameformat = "cn"
  groupformat = "ou"

  ## Configure ssh-key attribute name, default is 'sshPublicKey'
  # sshkeyattr = "ipaSshPubKey"

#################
# Enable and configure the optional REST API here.
[api]
  enabled = true
  tls = false # enable TLS for production!!
  listen = "0.0.0.0:5555"
  cert = "cert.pem"
  key = "key.pem" 